<ui:composition template="/templates/master.xhtml" xmlns:boot="https://cuioss.de/jsf/bootstrap"
                xmlns:cui-internal="https://cuioss.de/jsf/internal"
                xmlns:dev="https://cuioss.de/jsf/dev"
                xmlns:f="jakarta.faces.core"
                xmlns:h="jakarta.faces.html"
                xmlns:jsf="jakarta.faces"
                xmlns:p="http://primefaces.org/ui"
                xmlns:cui="https://cuioss.de/jsf/core"
                xmlns:ui="jakarta.faces.facelets"
                xmlns:pt="jakarta.faces.passthrough">
    <ui:define name="title">Miscellaneous Components</ui:define>
    <ui:define name="content">
        <h1>Miscellaneous Components</h1>
        <h2 id="cui_notificationBox">boot:notificationBox</h2>
        <p>Renders a bootstrap like alert.</p>
        <h3>Usage</h3>
        <boot:row>
            <boot:column size="6">
                <dev:sourceCode sourceContainerId="notificationBox"/>
            </boot:column>
            <boot:column size="6">
                <h:form id="notificationBox">
                    <boot:notificationBox state="WARNING"
                                          dismissible="true"
                                          dismissListener="#{notificationBoxHandler.dismissedListener}"
                                          contentValue="Attention please"/>
                </h:form>
                <p>Dismiss log:</p>
                <ul>
                    <ui:repeat value="#{notificationBoxHandler.dismissCalls}" var="call">
                        <li><h:outputText value="#{call}"/></li>
                    </ui:repeat>
                </ul>
            </boot:column>
        </boot:row>

        <h2 id="cui_tooltip">boot:tooltip</h2>
        <p>Decorator to render a bootstrap tooltip including javascript to activate for the parent component.</p>
        <h3>Usage</h3>
        <boot:row>
            <boot:column size="6">
                <boot:tooltip contentValue="Column tooltip"/>
                <dev:sourceCode sourceContainerId="tooltip-form"/>
            </boot:column>
            <boot:column size="6">
                <h:form id="tooltip-form">
                    <boot:labeledContainer layoutMode="label_sr_only" placeholderValue="Hover Me" id="tooltip">
                        <h:inputText id="input" required="true">
                            <boot:tooltip delay="1000" placement="bottom"
                                          contentValue="Very important tooltip text with delay of 1000 ms"/>
                        </h:inputText>
                    </boot:labeledContainer>
                </h:form>
            </boot:column>
        </boot:row>

        <h2 id="cui_popover">popover</h2>
        <p>Display a bootstrap popover.</p>
        <h3>Usage</h3>
        <boot:row>
            <boot:column size="6">
                <dev:sourceCode sourceContainerId="popover-form"/>
            </boot:column>
            <boot:column size="6">
                <h:form id="popover-form">
                    <h:outputScript library="javascript.enabler" name="enabler.popover.js"/>
                    <boot:icon id="popover_trigger" icon="cui-icon-circle_info"
                               size="xxxl"
                               state="info"
                               pt:data-toggle="popover"
                               pt:data-trigger="hover"
                               pt:data-placement="bottom"
                               pt:data-html="true"
                               pt:data-title="Popover Title"
                               pt:data-contentwrapper="popover-form:popover_content"/>
                    <h:panelGroup id="popover_content" styleClass="hidden">
                        <ul>
                            <li>muss mindestens Zeichen lang sein</li>
                            <li>muss mindestens Zeichen aus drei der folgenden Zeichenarten enthalten:
                                <ul>
                                    <li>Kleinbuchstaben</li>
                                    <li>Grossbuchstaben</li>
                                    <li>Zahlen</li>
                                    <li>Sonderzeichen</li>
                                </ul>
                            </li>
                            <li>muss verschieden von den letzten 5 Passwoertern sein</li>
                            <li>sollte nicht der Benutzername sein</li>
                        </ul>
                    </h:panelGroup>
                </h:form>
            </boot:column>
        </boot:row>

        <h2 id="cui_typewatch">cui:typewatch</h2>
        <p>Decorator to execute an action after a user has stopped typing in a text field.</p>
        <h3>Usage</h3>
        <boot:row>
            <boot:column size="6">
                <dev:sourceCode sourceContainerId="typeWatch"/>
            </boot:column>
            <boot:column size="6">
                <h:form id="typeWatch">
                    <boot:labeledContainer layoutMode="label_sr_only" placeholderValue="Type at least 3 Characters"
                                           id="wrapper">
                        <h:inputText id="input" required="true" value="#{typewatchHandlerBean.input}">
                            <cui-internal:typewatch id="typewatchInputBehavior" captureLength="3" highlight="true"
                                                    wait="800"
                                                    listener="#{typewatchHandlerBean.listener()}"
                                                    update="@form:entries"/>
                        </h:inputText>
                    </boot:labeledContainer>
                    <ul jsf:id="entries">
                        <ui:repeat value="#{typewatchHandlerBean.entries}" var="entry">
                            <li><h:outputText value="#{entry}"/></li>
                        </ui:repeat>
                    </ul>
                </h:form>
            </boot:column>
        </boot:row>

        <h2 id="cui_inline_confirm">cui:inlineConfirm</h2>
        <p>Confirm in a modern way.</p>
        <h3>Simple</h3>

        <boot:row>
            <boot:column size="6">
                <dev:sourceCode sourceContainerId="inlineConfirm"/>
            </boot:column>
            <boot:column size="6">
                <h:form id="inlineConfirm">
                    <cui:inlineConfirm>
                        <f:facet name="initial">
                            <boot:commandButton labelValue="I'm Bored" state="info"/>
                        </f:facet>
                        <h:panelGroup>
                            <p>If you press the button it will ...</p>
                            <boot:commandButton icon="cui-icon-bomb" labelValue="Destroy the world"
                                                onclick="PF('globalPageMessages').renderMessage({summary: 'boom', severity: 'error'});return false;"
                                                state="danger"/>
                        </h:panelGroup>
                    </cui:inlineConfirm>
                </h:form>
            </boot:column>
        </boot:row>
        <h3>Complex</h3>

        <boot:row>
            <boot:column size="6">
                <dev:sourceCode sourceContainerId="inlineConfirmComplex"/>
            </boot:column>
            <boot:column size="6">
                <h:form id="inlineConfirmComplex">
                    <style type="text/css">

                        /* adapt layout for mix of small confirm text with quickControlGroup */

                        div[data-inline-confirm-target] {
                            display: flex;
                            justify-content: space-between;
                            align-items: center;
                        }

                    </style>
                    <cui:inlineConfirm>
                        <f:facet name="initial">
                            <boot:commandButton labelValue="I'm Bored" state="info"/>
                        </f:facet>
                        <boot:notificationBox state="danger" contentValue="If you press the button it will ...">
                            <boot:quickControlGroup>
                                <boot:commandButton icon="cui-icon-bomb" labelValue="Destroy the world"
                                                    onclick="PF('globalPageMessages').renderMessage({summary: 'boom', severity: 'error'});return false;"
                                                    state="danger"/>
                                <boot:button labelValue="Oh no" pt:data-inline-confirm-cancel="cancel"/>
                            </boot:quickControlGroup>
                        </boot:notificationBox>

                    </cui:inlineConfirm>
                </h:form>
            </boot:column>
        </boot:row>

        <h2 id="cui_switch">boot:switch</h2>
        <h3>Usage</h3>
        <boot:row>
            <boot:column size="6">
                <dev:sourceCode sourceContainerId="switchForm"/>
            </boot:column>
            <boot:column size="6">
                <h:form id="switchForm">
                    <p>Minimal Example</p>
                    <boot:switch id="switchMinimal"
                                 titleValue="Some Title"
                                 value="#{switchDemoBean.switchMinimal}"
                                 onTextValue="on-text"
                                 offTextValue="off-text"/>

                    <br/>
                    <hr/>
                    <p>f:valueChangeListener</p>
                    <boot:switch id="switchAjaxValueChangeListener"
                                 titleValue="Some Title"
                                 value="#{switchDemoBean.switchFValueChangeListener}"
                                 onTextValue="on-text"
                                 offTextValue="off-text">
                        <f:valueChangeListener binding="#{switchDemoBean}"/>
                        <f:ajax render=":switchForm:nowFvalueChangeListener"/>
                    </boot:switch>
                    <h:outputText value="#{now}" id="nowFvalueChangeListener"/>

                    <br/>
                    <hr/>
                    <p>disabled="true"</p>
                    <boot:switch id="switchDisabled"
                                 titleValue="Title for Disabled"
                                 value="false"
                                 disabled="true"
                                 onTextValue="on-text"
                                 offTextValue="off-text"/>

                    <br/>
                    <hr/>
                    <p>ValueChangeListener</p>
                    <boot:switch id="switchValueChangeListener"
                                 titleValue="Trigger ValueChangeEvent via the components valueChangeListener"
                                 value="#{switchDemoBean.switchValueChangeListener}"
                                 valueChangeListener="#{switchDemoBean.valueChangeListener}"
                                 onTextValue="on-text"
                                 offTextValue="off-text">
                        <f:ajax render=":switchForm:nowValueChangeListener"/>
                    </boot:switch>
                    <h:outputText value="#{now}" id="nowValueChangeListener"/>

                    <br/>
                    <hr/>
                    <p>f:ajax listener</p>
                    <boot:switch titleValue="Trigger value change listener via AjaxBehaviorEvent"
                                 id="switchAjaxListener"
                                 value="#{switchDemoBean.switchFAjaxListener}"
                                 offTextValue="off-text" onTextValue="on-text">
                        <f:ajax listener="#{switchDemoBean.ajaxValueChangeListener}"
                                render=":switchForm:nowAjaxBehaviorEvent"/>
                    </boot:switch>
                    <h:outputText value="#{now}" id="nowAjaxBehaviorEvent"/>

                    <br/>
                    <hr/>
                    <p>PrimeFaces Listener</p>
                    <boot:switch titleValue="Trigger PrimeFaces listener"
                                 id="pfListener"
                                 value="#{switchDemoBean.switchPrimeFaces}"
                                 offTextValue="off-text" onTextValue="on-text">
                        <p:ajax listener="#{switchDemoBean.pfChangeListener}"
                                update="@form:nowPf"/>
                    </boot:switch>
                    <h:outputText value="#{now}" id="nowPf"/>
                </h:form>
            </boot:column>
        </boot:row>

        <h2 id="cui_bagge">boot:badge</h2>
        <h3>Usage</h3>
        <boot:row>
            <boot:column size="6">
                <dev:sourceCode sourceContainerId="badgeSample"/>
            </boot:column>
            <boot:column size="6" id="badgeSample">
                <h:form>

                    <p>
                        <a href="#">Inbox <boot:badge value="42"/>
                        </a>
                        <boot:commandButton state="primary" labelValue="Messages">
                            <boot:badge value="4"/>
                        </boot:commandButton>
                    </p>

                    <boot:panel state="primary" collapsible="false">

                        <f:facet name="header">
                            <h4>
                                <boot:icon icon="cui-icon-bell"/>
                                Notifications
                                <boot:badge value="42" style="float:right;"/>
                            </h4>
                        </f:facet>

                        <ul class="nav nav-pills" role="tablist">
                            <li role="presentation" class="active"><a href="#">Home <boot:badge value="17"/></a></li>
                            <li role="presentation"><a href="#">Profile</a></li>
                            <li role="presentation"><a href="#">Messages <boot:badge value="25"/></a></li>
                        </ul>

                    </boot:panel>
                </h:form>
            </boot:column>
        </boot:row>
        <h2 id="cui_outputLinkButton">boot:outputLinkButton</h2>
        <p>Renders a link styled as button</p>
        <h3>Usage</h3>
        <boot:row>
            <boot:column size="6">
                <dev:sourceCode sourceContainerId="outputLinkButton"/>
            </boot:column>
            <boot:column size="6" id="outputLinkButton">
                <boot:outputLinkButton labelValue="Test" value="https://www.cuioss.de" titleValue="Title"/>
            </boot:column>
        </boot:row>
        <h2 id="cui_blockElement">cui:blockElement</h2>
        <p>Blocks an element during an ajax request</p>
        <h3>Usage</h3>
        <boot:row>
            <boot:column size="6">
                <dev:sourceCode sourceContainerId="blockElement"/>
            </boot:column>
            <boot:column size="6" id="blockElement">
                <boot:commandButton action="#{blockElementBean.action}" labelValue="Test">
                    <f:ajax render="@this"/>
                    <!-- <p:ajax update="@this" /> -->
                    <cui:blockElement/>
                </boot:commandButton>
            </boot:column>
        </boot:row>
    </ui:define>
</ui:composition>
